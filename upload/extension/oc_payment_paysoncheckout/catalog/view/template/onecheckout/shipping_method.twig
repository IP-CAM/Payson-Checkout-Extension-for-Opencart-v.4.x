<fieldset>
    <legend>{{ shipping_title }}</legend>
    <div class="input-group">
        <span class="input-group-text"><i class="fa fa-truck"></i></span><input type="text" name="shipping_method" value="{{ shipping_method }}" placeholder="{{ entry_shipping_method }}" id="input-shipping-method" class="form-control" readonly/>
        <button type="button" id="button-shipping-methods" class="btn btn-primary">{{ button_choose }}</button>
    </div>
    <input type="hidden" name="code" value="{{ code }}" id="input-shipping-code"/>
    <div id="error-shipping-method" class="invalid-feedback"></div>
</fieldset>
    <script type="text/javascript"><!--
$('#button-shipping-methods').on('click', function () {
        var element = this;

        chain.attach(function () {
            return $.ajax({
                url: 'index.php?route=extension/oc_payment_paysoncheckout/onecheckout/shipping_method.quote&language={{ language }}',
                dataType: 'json',
                beforeSend: function () {
                    sendLockDown();
                },
                success: function (json) {
                    if (json['error']) {
                        $('#input-shipping-method').addClass('is-invalid');
                        $('#error-shipping-method').html(json['error']).addClass('d-block');
                    }

                    if (json['shipping_methods']) {
                        $('#modal-shipping').remove();

                        html = '<div id="modal-shipping" class="modal">';
                        html += '  <div class="modal-dialog modal-dialog-centered">';
                        html += '    <div class="modal-content">';
                        html += '      <div class="modal-header">';
                        html += '        <h5 class="modal-title"><i class="fa fa-truck"></i> {{ text_shipping_method }}</h5>';
                        html += '        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>';
                        html += '      </div>';
                        html += '      <div class="modal-body">';
                        html += '        <form id="form-shipping-method">';
                        html += '          <p>{{ text_shipping }}</p>';

                        for (i in json['shipping_methods']) {
                            html += '<p><strong>' + json['shipping_methods'][i]['name'] + '</strong></p>';

                            if (!json['shipping_methods'][i]['error']) {
                                for (j in json['shipping_methods'][i]['quote']) {
                                    html += '<div class="form-check">';

                                    var code = i + '-' + j.replaceAll('_', '-');

                                    html += '<input type="radio" name="shipping_method" value="' + json['shipping_methods'][i]['quote'][j]['code'] + '" id="input-shipping-method-' + code + '"';

                                    if (json['shipping_methods'][i]['quote'][j]['code'] == $('#input-shipping-code').val()) {
                                        html += ' checked';
                                    }

                                    html += '/>';
                                    html += '  <label for="input-shipping-method-' + code + '">' + json['shipping_methods'][i]['quote'][j]['name'] + ' - ' + json['shipping_methods'][i]['quote'][j]['text'] + '</label>';
                                    html += '</div>';
                                }
                            } else {
                                html += '<div class="alert alert-danger">' + json['shipping_methods'][i]['error'] + '</div>';
                            }
                        }

                        html += '          <div class="text-end">';
                        html += '            <button type="submit" id="button-shipping-method" class="btn btn-primary">{{ button_continue }}</button>';
                        html += '          </div>';
                        html += '        </form>';
                        html += '      </div>';
                        html += '    </div>';
                        html += '  </div>';
                        html += '</div>';

                        $('body').append(html);

                        $('#modal-shipping').modal('show');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                }
            });
        });
    });

    $(document).on('submit', '#form-shipping-method', function (e) {
        e.preventDefault();

        var element = this;

        chain.attach(function () {
            return $.ajax({
                url: 'index.php?route=extension/oc_payment_paysoncheckout/onecheckout/shipping_method.save&language={{ language }}',
                type: 'post',
                data: $('#form-shipping-method').serialize(),
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded',
                beforeSend: function () {
                    $('#button-shipping-method').button('loading');
                },
                complete: function () {
                    $('#button-shipping-method').button('reset');
                },
                success: function (json) {

                    if (json['shipping_ext'].cost >= 0) {
                        document.getElementById("payson").style.pointerEvents = "auto";
                        document.getElementById("payson").style.opacity = "1.0";
                    } else {
                        $('#alert').prepend('<div class="alert alert-success alert-dismissible"><i class="fa-solid fa-circle-check"></i> SHIPPING METHOD ' + json['shipping_alert'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');
                    }
                    if (json['redirect']) {
                        location = json['redirect'];
                    }

                    if (json['error']) {
                        $('#alert').prepend('<div class="alert alert-danger alert-dismissible"><i class="fa-solid fa-circle-exclamation"></i> ERROR ' + json['error'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');
                    }

                    if (json['success']) {
                        $('#alert').prepend('<div class="alert alert-success alert-dismissible"><i class="fa-solid fa-circle-check"></i> SUCCESS  ' + json['success'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');

                        $('#input-shipping-method').val($('input[name=\'shipping_method\']:checked').parent().find('label').text());
                        $('#input-shipping-code').val($('input[name=\'shipping_method\']:checked').val());

                        $('#input-payment-method').val('');

                        chain.attach(function () {
                            return $.ajax({
                                url: 'index.php?route=extension/oc_payment_paysoncheckout/onecheckout/onecheckout.editOrderItems&language={{ language }}',
                                type: 'GET',
                                dataType: 'json',

                                success: function (json) {
                                    $('#modal-shipping').modal('hide');
                                    $('#checkout-confirm').load('index.php?route=extension/oc_payment_paysoncheckout/onecheckout/confirm.confirm&language={{ language }}');
                                    $("#payson").append(json['snippet']);
                                },
                                error: function (xhr, ajaxOptions, thrownError) {
                                    console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                                }
                            });

                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                }
            });
        });
    });


// Triggered when customer adress has been set or changed
    document.addEventListener("PaysonEmbeddedAddressChanged", function (evt) {
        var address = evt.detail;
        AddressChanged(address);
    });

    function AddressChanged(address) {
        $.ajax({
            url: 'index.php?route=extension/oc_payment_paysoncheckout/onecheckout/onecheckout.editPaysonEmbeddedAddress&language={{ language }}&shipping_address=' + JSON.stringify(address),
            type: 'post',
            dataType: 'json',
            beforeSend: function () {
                sendLockDown();
                //$(element).prop('disabled', true);
            },
            complete: function () {
                sendUpdate();
                //$(element).prop('disabled', false);
            },
            success: function (json) {

                if (json['is_payson_embedded_address_changed']) {
                    chain.attach(function () {
                        return $.ajax({
                            url: 'index.php?route=extension/oc_payment_paysoncheckout/onecheckout/onecheckout.editOrderItems&language={{ language }}',
                            type: 'GET',
                            dataType: 'json',

                            success: function (json) {
                                sendRelease();
                                $('#modal-shipping').modal('hide');
                                $('#checkout-confirm').load('index.php?route=extension/oc_payment_paysoncheckout/onecheckout/confirm.confirm&language={{ language }}');

                                $("#checkoutIframe").remove();
                                $("#infoStatus").remove();
                                $("#payson").append(json['snippet']);
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                            }
                        });
                    });



                }

            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
            }
        });
    }


// Reloads the iframe object (for example after updating of an order amount)
    function sendUpdate() {
        document.getElementById('paysonIframe').contentWindow.postMessage('updatePage', '*');
    }

// Lock iframe object from user interaction until checkout is updated
    function sendLockDown() {
        document.getElementById('paysonIframe').contentWindow.postMessage('lock', '*');
    }

// Release an locked iframe object
    function sendRelease() {
        document.getElementById('paysonIframe').contentWindow.postMessage('release', '*');
    }

// Triggered when customer has clicked "Complete payment" and started the payment process
    document.addEventListener("PaysonEmbeddedPaymentInitiated", function (evt) {
        //console.log('*** addEventListener ***');
    });
//--></script>